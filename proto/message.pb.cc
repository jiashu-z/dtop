// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr StringMessage::StringMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StringMessageDefaultTypeInternal {
  constexpr StringMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StringMessageDefaultTypeInternal() {}
  union {
    StringMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StringMessageDefaultTypeInternal _StringMessage_default_instance_;
constexpr IntegerMessage::IntegerMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(0){}
struct IntegerMessageDefaultTypeInternal {
  constexpr IntegerMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IntegerMessageDefaultTypeInternal() {}
  union {
    IntegerMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IntegerMessageDefaultTypeInternal _IntegerMessage_default_instance_;
constexpr LongMessage::LongMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(PROTOBUF_LONGLONG(0)){}
struct LongMessageDefaultTypeInternal {
  constexpr LongMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LongMessageDefaultTypeInternal() {}
  union {
    LongMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LongMessageDefaultTypeInternal _LongMessage_default_instance_;
constexpr FloatMessage::FloatMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(0){}
struct FloatMessageDefaultTypeInternal {
  constexpr FloatMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FloatMessageDefaultTypeInternal() {}
  union {
    FloatMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FloatMessageDefaultTypeInternal _FloatMessage_default_instance_;
constexpr DoubleMessage::DoubleMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(0){}
struct DoubleMessageDefaultTypeInternal {
  constexpr DoubleMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DoubleMessageDefaultTypeInternal() {}
  union {
    DoubleMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DoubleMessageDefaultTypeInternal _DoubleMessage_default_instance_;
constexpr StringArrayMessage::StringArrayMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arr_(){}
struct StringArrayMessageDefaultTypeInternal {
  constexpr StringArrayMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StringArrayMessageDefaultTypeInternal() {}
  union {
    StringArrayMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StringArrayMessageDefaultTypeInternal _StringArrayMessage_default_instance_;
constexpr IntegerArrayMessage::IntegerArrayMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arr_()
  , _arr_cached_byte_size_(){}
struct IntegerArrayMessageDefaultTypeInternal {
  constexpr IntegerArrayMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IntegerArrayMessageDefaultTypeInternal() {}
  union {
    IntegerArrayMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IntegerArrayMessageDefaultTypeInternal _IntegerArrayMessage_default_instance_;
constexpr LongArrayMessage::LongArrayMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arr_()
  , _arr_cached_byte_size_(){}
struct LongArrayMessageDefaultTypeInternal {
  constexpr LongArrayMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LongArrayMessageDefaultTypeInternal() {}
  union {
    LongArrayMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LongArrayMessageDefaultTypeInternal _LongArrayMessage_default_instance_;
constexpr FloatArrayMessage::FloatArrayMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arr_()
  , _arr_cached_byte_size_(){}
struct FloatArrayMessageDefaultTypeInternal {
  constexpr FloatArrayMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FloatArrayMessageDefaultTypeInternal() {}
  union {
    FloatArrayMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FloatArrayMessageDefaultTypeInternal _FloatArrayMessage_default_instance_;
constexpr DoubleArrayMessage::DoubleArrayMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arr_()
  , _arr_cached_byte_size_(){}
struct DoubleArrayMessageDefaultTypeInternal {
  constexpr DoubleArrayMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DoubleArrayMessageDefaultTypeInternal() {}
  union {
    DoubleArrayMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DoubleArrayMessageDefaultTypeInternal _DoubleArrayMessage_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StringMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StringMessage, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IntegerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IntegerMessage, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LongMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LongMessage, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FloatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FloatMessage, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DoubleMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DoubleMessage, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StringArrayMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StringArrayMessage, arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IntegerArrayMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IntegerArrayMessage, arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LongArrayMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::LongArrayMessage, arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FloatArrayMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FloatArrayMessage, arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DoubleArrayMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DoubleArrayMessage, arr_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::StringMessage)},
  { 6, -1, sizeof(::IntegerMessage)},
  { 12, -1, sizeof(::LongMessage)},
  { 18, -1, sizeof(::FloatMessage)},
  { 24, -1, sizeof(::DoubleMessage)},
  { 30, -1, sizeof(::StringArrayMessage)},
  { 36, -1, sizeof(::IntegerArrayMessage)},
  { 42, -1, sizeof(::LongArrayMessage)},
  { 48, -1, sizeof(::FloatArrayMessage)},
  { 54, -1, sizeof(::DoubleArrayMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StringMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_IntegerMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_LongMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_FloatMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DoubleMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StringArrayMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_IntegerArrayMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_LongArrayMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_FloatArrayMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DoubleArrayMessage_default_instance_),
};

const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessage.proto\"\034\n\rStringMessage\022\013\n\003val\030"
  "\001 \001(\t\"\035\n\016IntegerMessage\022\013\n\003val\030\001 \001(\005\"\032\n\013"
  "LongMessage\022\013\n\003val\030\001 \001(\003\"\033\n\014FloatMessage"
  "\022\013\n\003val\030\001 \001(\002\"\034\n\rDoubleMessage\022\013\n\003val\030\001 "
  "\001(\001\"!\n\022StringArrayMessage\022\013\n\003arr\030\001 \003(\t\"\""
  "\n\023IntegerArrayMessage\022\013\n\003arr\030\001 \003(\005\"\037\n\020Lo"
  "ngArrayMessage\022\013\n\003arr\030\001 \003(\003\" \n\021FloatArra"
  "yMessage\022\013\n\003arr\030\001 \003(\002\"!\n\022DoubleArrayMess"
  "age\022\013\n\003arr\030\001 \003(\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto = {
  false, false, 344, descriptor_table_protodef_message_2eproto, "message.proto", 
  &descriptor_table_message_2eproto_once, nullptr, 0, 10,
  schemas, file_default_instances, TableStruct_message_2eproto::offsets,
  file_level_metadata_message_2eproto, file_level_enum_descriptors_message_2eproto, file_level_service_descriptors_message_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_message_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return descriptor_table_message_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);

// ===================================================================

class StringMessage::_Internal {
 public:
};

StringMessage::StringMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StringMessage)
}
StringMessage::StringMessage(const StringMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_val().empty()) {
    val_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_val(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StringMessage)
}

void StringMessage::SharedCtor() {
val_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StringMessage::~StringMessage() {
  // @@protoc_insertion_point(destructor:StringMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StringMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  val_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StringMessage::ArenaDtor(void* object) {
  StringMessage* _this = reinterpret_cast< StringMessage* >(object);
  (void)_this;
}
void StringMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StringMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StringMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:StringMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_val();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StringMessage.val"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StringMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StringMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string val = 1;
  if (this->val().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_val().data(), static_cast<int>(this->_internal_val().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StringMessage.val");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StringMessage)
  return target;
}

size_t StringMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StringMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string val = 1;
  if (this->val().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_val());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StringMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StringMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StringMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StringMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StringMessage)
    MergeFrom(*source);
  }
}

void StringMessage::MergeFrom(const StringMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StringMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.val().size() > 0) {
    _internal_set_val(from._internal_val());
  }
}

void StringMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StringMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringMessage::CopyFrom(const StringMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StringMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMessage::IsInitialized() const {
  return true;
}

void StringMessage::InternalSwap(StringMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  val_.Swap(&other->val_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StringMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IntegerMessage::_Internal {
 public:
};

IntegerMessage::IntegerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IntegerMessage)
}
IntegerMessage::IntegerMessage(const IntegerMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:IntegerMessage)
}

void IntegerMessage::SharedCtor() {
val_ = 0;
}

IntegerMessage::~IntegerMessage() {
  // @@protoc_insertion_point(destructor:IntegerMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IntegerMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IntegerMessage::ArenaDtor(void* object) {
  IntegerMessage* _this = reinterpret_cast< IntegerMessage* >(object);
  (void)_this;
}
void IntegerMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntegerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IntegerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:IntegerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntegerMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          val_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntegerMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IntegerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 val = 1;
  if (this->val() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IntegerMessage)
  return target;
}

size_t IntegerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IntegerMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 val = 1;
  if (this->val() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_val());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntegerMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IntegerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const IntegerMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntegerMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IntegerMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IntegerMessage)
    MergeFrom(*source);
  }
}

void IntegerMessage::MergeFrom(const IntegerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IntegerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.val() != 0) {
    _internal_set_val(from._internal_val());
  }
}

void IntegerMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IntegerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerMessage::CopyFrom(const IntegerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IntegerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerMessage::IsInitialized() const {
  return true;
}

void IntegerMessage::InternalSwap(IntegerMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(val_, other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntegerMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LongMessage::_Internal {
 public:
};

LongMessage::LongMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:LongMessage)
}
LongMessage::LongMessage(const LongMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:LongMessage)
}

void LongMessage::SharedCtor() {
val_ = PROTOBUF_LONGLONG(0);
}

LongMessage::~LongMessage() {
  // @@protoc_insertion_point(destructor:LongMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LongMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LongMessage::ArenaDtor(void* object) {
  LongMessage* _this = reinterpret_cast< LongMessage* >(object);
  (void)_this;
}
void LongMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LongMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LongMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:LongMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LongMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          val_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LongMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LongMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 val = 1;
  if (this->val() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LongMessage)
  return target;
}

size_t LongMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LongMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 val = 1;
  if (this->val() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_val());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LongMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LongMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LongMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LongMessage)
    MergeFrom(*source);
  }
}

void LongMessage::MergeFrom(const LongMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LongMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.val() != 0) {
    _internal_set_val(from._internal_val());
  }
}

void LongMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LongMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongMessage::CopyFrom(const LongMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LongMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongMessage::IsInitialized() const {
  return true;
}

void LongMessage::InternalSwap(LongMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(val_, other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LongMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FloatMessage::_Internal {
 public:
};

FloatMessage::FloatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:FloatMessage)
}
FloatMessage::FloatMessage(const FloatMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:FloatMessage)
}

void FloatMessage::SharedCtor() {
val_ = 0;
}

FloatMessage::~FloatMessage() {
  // @@protoc_insertion_point(destructor:FloatMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FloatMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FloatMessage::ArenaDtor(void* object) {
  FloatMessage* _this = reinterpret_cast< FloatMessage* >(object);
  (void)_this;
}
void FloatMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FloatMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FloatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FloatMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FloatMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          val_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FloatMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FloatMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float val = 1;
  if (!(this->val() <= 0 && this->val() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FloatMessage)
  return target;
}

size_t FloatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FloatMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float val = 1;
  if (!(this->val() <= 0 && this->val() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FloatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FloatMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FloatMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FloatMessage)
    MergeFrom(*source);
  }
}

void FloatMessage::MergeFrom(const FloatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FloatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.val() <= 0 && from.val() >= 0)) {
    _internal_set_val(from._internal_val());
  }
}

void FloatMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FloatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatMessage::CopyFrom(const FloatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FloatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatMessage::IsInitialized() const {
  return true;
}

void FloatMessage::InternalSwap(FloatMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(val_, other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FloatMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DoubleMessage::_Internal {
 public:
};

DoubleMessage::DoubleMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DoubleMessage)
}
DoubleMessage::DoubleMessage(const DoubleMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:DoubleMessage)
}

void DoubleMessage::SharedCtor() {
val_ = 0;
}

DoubleMessage::~DoubleMessage() {
  // @@protoc_insertion_point(destructor:DoubleMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DoubleMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DoubleMessage::ArenaDtor(void* object) {
  DoubleMessage* _this = reinterpret_cast< DoubleMessage* >(object);
  (void)_this;
}
void DoubleMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DoubleMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DoubleMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DoubleMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoubleMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          val_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DoubleMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DoubleMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double val = 1;
  if (!(this->val() <= 0 && this->val() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DoubleMessage)
  return target;
}

size_t DoubleMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DoubleMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double val = 1;
  if (!(this->val() <= 0 && this->val() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoubleMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DoubleMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DoubleMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DoubleMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DoubleMessage)
    MergeFrom(*source);
  }
}

void DoubleMessage::MergeFrom(const DoubleMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DoubleMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.val() <= 0 && from.val() >= 0)) {
    _internal_set_val(from._internal_val());
  }
}

void DoubleMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DoubleMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleMessage::CopyFrom(const DoubleMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DoubleMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleMessage::IsInitialized() const {
  return true;
}

void DoubleMessage::InternalSwap(DoubleMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(val_, other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoubleMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StringArrayMessage::_Internal {
 public:
};

StringArrayMessage::StringArrayMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StringArrayMessage)
}
StringArrayMessage::StringArrayMessage(const StringArrayMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arr_(from.arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:StringArrayMessage)
}

void StringArrayMessage::SharedCtor() {
}

StringArrayMessage::~StringArrayMessage() {
  // @@protoc_insertion_point(destructor:StringArrayMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StringArrayMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StringArrayMessage::ArenaDtor(void* object) {
  StringArrayMessage* _this = reinterpret_cast< StringArrayMessage* >(object);
  (void)_this;
}
void StringArrayMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StringArrayMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StringArrayMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:StringArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringArrayMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StringArrayMessage.arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StringArrayMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StringArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string arr = 1;
  for (int i = 0, n = this->_internal_arr_size(); i < n; i++) {
    const auto& s = this->_internal_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StringArrayMessage.arr");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StringArrayMessage)
  return target;
}

size_t StringArrayMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StringArrayMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(arr_.size());
  for (int i = 0, n = arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      arr_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringArrayMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StringArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StringArrayMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StringArrayMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StringArrayMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StringArrayMessage)
    MergeFrom(*source);
  }
}

void StringArrayMessage::MergeFrom(const StringArrayMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StringArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arr_.MergeFrom(from.arr_);
}

void StringArrayMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StringArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringArrayMessage::CopyFrom(const StringArrayMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StringArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringArrayMessage::IsInitialized() const {
  return true;
}

void StringArrayMessage::InternalSwap(StringArrayMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arr_.InternalSwap(&other->arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StringArrayMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IntegerArrayMessage::_Internal {
 public:
};

IntegerArrayMessage::IntegerArrayMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IntegerArrayMessage)
}
IntegerArrayMessage::IntegerArrayMessage(const IntegerArrayMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arr_(from.arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IntegerArrayMessage)
}

void IntegerArrayMessage::SharedCtor() {
}

IntegerArrayMessage::~IntegerArrayMessage() {
  // @@protoc_insertion_point(destructor:IntegerArrayMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IntegerArrayMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IntegerArrayMessage::ArenaDtor(void* object) {
  IntegerArrayMessage* _this = reinterpret_cast< IntegerArrayMessage* >(object);
  (void)_this;
}
void IntegerArrayMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntegerArrayMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IntegerArrayMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:IntegerArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntegerArrayMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_arr(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntegerArrayMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IntegerArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 arr = 1;
  {
    int byte_size = _arr_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_arr(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IntegerArrayMessage)
  return target;
}

size_t IntegerArrayMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IntegerArrayMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 arr = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->arr_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntegerArrayMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IntegerArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const IntegerArrayMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntegerArrayMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IntegerArrayMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IntegerArrayMessage)
    MergeFrom(*source);
  }
}

void IntegerArrayMessage::MergeFrom(const IntegerArrayMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IntegerArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arr_.MergeFrom(from.arr_);
}

void IntegerArrayMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IntegerArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerArrayMessage::CopyFrom(const IntegerArrayMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IntegerArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerArrayMessage::IsInitialized() const {
  return true;
}

void IntegerArrayMessage::InternalSwap(IntegerArrayMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arr_.InternalSwap(&other->arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntegerArrayMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LongArrayMessage::_Internal {
 public:
};

LongArrayMessage::LongArrayMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:LongArrayMessage)
}
LongArrayMessage::LongArrayMessage(const LongArrayMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arr_(from.arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LongArrayMessage)
}

void LongArrayMessage::SharedCtor() {
}

LongArrayMessage::~LongArrayMessage() {
  // @@protoc_insertion_point(destructor:LongArrayMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LongArrayMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LongArrayMessage::ArenaDtor(void* object) {
  LongArrayMessage* _this = reinterpret_cast< LongArrayMessage* >(object);
  (void)_this;
}
void LongArrayMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LongArrayMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LongArrayMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:LongArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LongArrayMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int64 arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_arr(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LongArrayMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LongArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 arr = 1;
  {
    int byte_size = _arr_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_arr(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LongArrayMessage)
  return target;
}

size_t LongArrayMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LongArrayMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 arr = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->arr_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongArrayMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LongArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LongArrayMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongArrayMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LongArrayMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LongArrayMessage)
    MergeFrom(*source);
  }
}

void LongArrayMessage::MergeFrom(const LongArrayMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LongArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arr_.MergeFrom(from.arr_);
}

void LongArrayMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LongArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongArrayMessage::CopyFrom(const LongArrayMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LongArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongArrayMessage::IsInitialized() const {
  return true;
}

void LongArrayMessage::InternalSwap(LongArrayMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arr_.InternalSwap(&other->arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LongArrayMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FloatArrayMessage::_Internal {
 public:
};

FloatArrayMessage::FloatArrayMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:FloatArrayMessage)
}
FloatArrayMessage::FloatArrayMessage(const FloatArrayMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arr_(from.arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FloatArrayMessage)
}

void FloatArrayMessage::SharedCtor() {
}

FloatArrayMessage::~FloatArrayMessage() {
  // @@protoc_insertion_point(destructor:FloatArrayMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FloatArrayMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FloatArrayMessage::ArenaDtor(void* object) {
  FloatArrayMessage* _this = reinterpret_cast< FloatArrayMessage* >(object);
  (void)_this;
}
void FloatArrayMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FloatArrayMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FloatArrayMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FloatArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FloatArrayMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated float arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13) {
          _internal_add_arr(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FloatArrayMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FloatArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float arr = 1;
  if (this->_internal_arr_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_arr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FloatArrayMessage)
  return target;
}

size_t FloatArrayMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FloatArrayMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float arr = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_arr_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatArrayMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FloatArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatArrayMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FloatArrayMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FloatArrayMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FloatArrayMessage)
    MergeFrom(*source);
  }
}

void FloatArrayMessage::MergeFrom(const FloatArrayMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FloatArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arr_.MergeFrom(from.arr_);
}

void FloatArrayMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FloatArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatArrayMessage::CopyFrom(const FloatArrayMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FloatArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatArrayMessage::IsInitialized() const {
  return true;
}

void FloatArrayMessage::InternalSwap(FloatArrayMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arr_.InternalSwap(&other->arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FloatArrayMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DoubleArrayMessage::_Internal {
 public:
};

DoubleArrayMessage::DoubleArrayMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DoubleArrayMessage)
}
DoubleArrayMessage::DoubleArrayMessage(const DoubleArrayMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arr_(from.arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DoubleArrayMessage)
}

void DoubleArrayMessage::SharedCtor() {
}

DoubleArrayMessage::~DoubleArrayMessage() {
  // @@protoc_insertion_point(destructor:DoubleArrayMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DoubleArrayMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DoubleArrayMessage::ArenaDtor(void* object) {
  DoubleArrayMessage* _this = reinterpret_cast< DoubleArrayMessage* >(object);
  (void)_this;
}
void DoubleArrayMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DoubleArrayMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DoubleArrayMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DoubleArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoubleArrayMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated double arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9) {
          _internal_add_arr(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DoubleArrayMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DoubleArrayMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double arr = 1;
  if (this->_internal_arr_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_arr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DoubleArrayMessage)
  return target;
}

size_t DoubleArrayMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DoubleArrayMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double arr = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_arr_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoubleArrayMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DoubleArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleArrayMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DoubleArrayMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DoubleArrayMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DoubleArrayMessage)
    MergeFrom(*source);
  }
}

void DoubleArrayMessage::MergeFrom(const DoubleArrayMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DoubleArrayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arr_.MergeFrom(from.arr_);
}

void DoubleArrayMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DoubleArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleArrayMessage::CopyFrom(const DoubleArrayMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DoubleArrayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleArrayMessage::IsInitialized() const {
  return true;
}

void DoubleArrayMessage::InternalSwap(DoubleArrayMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arr_.InternalSwap(&other->arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoubleArrayMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::StringMessage* Arena::CreateMaybeMessage< ::StringMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StringMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::IntegerMessage* Arena::CreateMaybeMessage< ::IntegerMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IntegerMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::LongMessage* Arena::CreateMaybeMessage< ::LongMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LongMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::FloatMessage* Arena::CreateMaybeMessage< ::FloatMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FloatMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DoubleMessage* Arena::CreateMaybeMessage< ::DoubleMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DoubleMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::StringArrayMessage* Arena::CreateMaybeMessage< ::StringArrayMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StringArrayMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::IntegerArrayMessage* Arena::CreateMaybeMessage< ::IntegerArrayMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IntegerArrayMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::LongArrayMessage* Arena::CreateMaybeMessage< ::LongArrayMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LongArrayMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::FloatArrayMessage* Arena::CreateMaybeMessage< ::FloatArrayMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FloatArrayMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DoubleArrayMessage* Arena::CreateMaybeMessage< ::DoubleArrayMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DoubleArrayMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
